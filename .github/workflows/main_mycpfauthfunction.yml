name: Azure Functions CI/CD

on:
  push:
    branches:
      - main  # O pipeline será acionado quando houver push na branch 'main'
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'cpf-auth-function'  # Caminho para a função
  DOTNET_VERSION: '6.0.x'  # Defina a versão do .NET usada no projeto

jobs:
  build-and-deploy:
    runs-on: windows-latest
    permissions:
      id-token: write  # Necessário para autenticação JWT no Azure

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies and Build'
        shell: pwsh  # Usa PowerShell para rodar o script no Windows
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet restore cpf-auth-function.csproj  # Caminho correto para o arquivo .csproj
          dotnet build cpf-auth-function.csproj --configuration Release --output ./output
          popd

      - name: 'Login to Azure'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_4FFAEB8BF091469D96320A1B8E39826C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F2CFD5E91FC247528AB5179DD0BE3492 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_5ED50FF948B3408A8891543960939258 }}

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'MyCpfAuthFunction'  # Substitua pelo nome da sua Azure Function
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'  # Define o caminho correto para o pacote compilado
